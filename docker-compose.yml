services:
  api:
    image: albertodeduce/electra-ia
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_SCHEMA=${DB_SCHEMA}
      - KEYDB_HOST=${KEYDB_HOST}
      - KEYDB_PORT=${KEYDB_PORT}
    depends_on:
      - redis
      # - db

      # db:
      #   image: postgres:13
      #   volumes:
      #     - postgres_data:/var/lib/postgresql/data
      #   environment:
      #     - POSTGRES_USER=${DB_USER}
      #     - POSTGRES_PASSWORD=${DB_PASSWORD}
      #     - POSTGRES_DB=${DB_NAME}

  redis:
    image: eqalpha/keydb:latest
    restart: unless-stopped
    command: keydb-server --appendonly yes --appendfsync everysec --save 900 1 --save 300 10 --save 60 10000 --maxmemory 256mb --maxmemory-policy allkeys-lru --protected-mode no
    volumes:
      - keydb_data:/data
    ports:
      - "6379:6379"

  redis-commander:
    # https://hub.docker.com/r/rediscommander/redis-commander
    # container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

  celery_worker:
    image: albertodeduce/electra-ia
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: celery -A app.tasks.celery_app worker --loglevel=info --pool=solo --queues=predict_vanos_queue
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_SCHEMA=${DB_SCHEMA}
      - KEYDB_HOST=${KEYDB_HOST}
      - KEYDB_PORT=${KEYDB_PORT}
    depends_on:
      - api
      - redis
      # - db

  flower:
    image: albertodeduce/electra-ia
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: celery -A app.tasks.celery_app flower --persistent --db=/flower/flower --port=5555
    volumes:
      - flower_data:/flower
    ports:
      - "5555:5555"
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_SCHEMA=${DB_SCHEMA}
      - KEYDB_HOST=${KEYDB_HOST}
      - KEYDB_PORT=${KEYDB_PORT}
      - FLOWER_UNAUTHENTICATED_API=true
    depends_on:
      - celery_worker
      - redis

volumes:
  # postgres_data:
  keydb_data:
  flower_data:
